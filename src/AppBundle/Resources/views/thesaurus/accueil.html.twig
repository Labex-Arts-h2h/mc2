{% extends "base.html.twig" %}

{% block stylesheets %}
    {{ parent() }}

    <link href="https://fonts.googleapis.com/css?family=Dancing+Script" rel="stylesheet">

    <style>

        nav{
            display:none;
        }

        .thesaurus-elements{
            display: none;
        }

        .thesaurus-element{
            /*font-size:1.9em;*/
            color: black;
            font-family: 'Dancing Script', cursive;
            height: 48px;
            margin-bottom: 2px;
            overflow: hidden;
            line-height: 1em;
            text-transform: capitalize;
        }

        .thesaurus-element a{
            color: #382f2f;
            display: none;
        }

        .thesaurus-element a:hover{
            color :#CC0000;
        }


        .hidden{
            display:none;
        }

        footer{
            display:none;
        }

        .title{

            margin-bottom: 1.8em;
        }

        .title h2{
            font-size: 2.7em;
            text-align: center;
            text-transform: capitalize;
        }

        .title i{
            font-size : 2.6rem;
            color:#382f2f;
            cursor: pointer;
        }

        .modal{
            padding:15px;
        }


    </style>
{% endblock %}

{% block body %}
    <div class="container-fluid">

        <div class="row">


            <!-- Modal Structure -->
            <div id="searchBox" class="modal">

                <h2>Search a thesaurus element <span class="tooltipped" data-position="bottom" data-delay="30" data-tooltip="Writing 2 letters or more displays some suggestion, you can click on the element to go on its dedicated page"><i class="material-icons circle white-text grey lighten-1">help</i></span></h2>
                <div class="input-field">
                    <i class="material-icons prefix">search</i>
                    <input id="searchItem" type="text" class="autocomplete" placeholder='Examples : "acrobatic, Dallas"'>
                    <ul class="autocomplete-content dropdown-content"></ul>
                </div>
            </div>

            <section class="col s12">

                <header class="hidden title">
                    <h2>Thesaurus types <a class="waves-effect waves-light modal-trigger" href="#searchBox"><i class="material-icons">search</i></a></h2>
                </header>


                <div>

                    <ul class="row thesaurus-elements">
                    {% for item in codes  %}
                        <li class="col s12 m6 l4 thesaurus-element center">
                            <a href="{{ path('thesaurus_type', {'content' : item.content}) }}">{{ item.title }}</a>
                        </li>
                    {% endfor %}
                    </ul>

                </div>


            </section>


        </div>
        {#<section class="card">#}
            {#<h3>Search a specific title of a thesaurus element</h3>#}
            {#<input type="text">#}
        {#</section>#}
    </div>

{% endblock %}

{% block javascripts %}

    {{ parent() }}

    <script>
        // Show sideNav
        $(".button-collapse").sideNav();
//        $('.button-collapse').sideNav('show');
//        // Hide sideNav
//        $('.button-collapse').sideNav('hide');
//        // Destroy sideNav
//        $('.button-collapse').sideNav('destroy');
    </script>

    <script>

        function displayPage(){
            displayElements();
            $('.thesaurus-elements').delay(1000).fadeIn(3000);
        }

        function displayHeader(delay){
            $('nav').delay(delay).fadeIn(1000);
        }

        function displayTitle(title, delay){
            $(title).delay(delay).fadeIn(2000);
        }

        function displayFooter(delay){
            $('footer').delay(delay).fadeIn(5000);
        }


        function displayElements(){

            var bottom = (Math.random()*20)+80;
            var nbElements = $('.thesaurus-element').length;
            var uniqueRandoms = [];
            var numRandoms = nbElements;

            function makeUniqueRandom() {
                // refill the array if needed
                if (!uniqueRandoms.length) {
                    for (var i = 0; i <= numRandoms; i++) {
                        uniqueRandoms.push(i);
                    }
                }
                var index = Math.floor(Math.random() * uniqueRandoms.length);
                var val = uniqueRandoms[index];

                // now remove that value from the array
                uniqueRandoms.splice(index, 1);

                return val;

            }

            for (var i = 0; i <= nbElements; i++){
                bottom = Math.random()+'em';

                $('.thesaurus-element:nth-child('+i+')').css('fontSize', (Math.random()*0.5)+1.8 +'em' )
                $('.thesaurus-element:nth-child('+i+')').css('paddingLeft', (Math.random()*3) +'em');
                $('.thesaurus-element:nth-child('+makeUniqueRandom()+') a').delay(1500+(50*i)).fadeIn(1000);

            }

        }

        function killWait(){
            $('nav').show();
            $('.title').show();
            $('footer').delay(500).fadeIn(100);
            $('.thesaurus-element a').show();
        }

        $(document).ready(function() {
            displayHeader(200);
            displayTitle('.title', 700);
            displayPage();
            displayFooter(2000);
            $(window).on('click', killWait);
        });

    </script>


    <script>

    (function(window, $)
        {

            window.searchApp = {

                test: function(){
                    console.log('Lancement de searchApp');
                },

                searchItem: function(){

                    var $inputDiv = $("#searchItem");
                    var $autocomplete = $('.autocomplete-content');
                    var inputVal = $("#searchItem").val();
                    var link = '/thesaurus/id=';

                    console.log('Les caractères rentrés sont : "'+inputVal+'" et la length et de '+inputVal.length);


                    if(inputVal.length>1){

                        jQuery.when(
                            jQuery.getJSON('/api/thesaurus/elastica/'+inputVal)
                        ).done(function (json){

                            data = [];

                            for(var i= 0; i < json.length;i++){

//                                id = json[i].id;
                                title = json[i].title;
                                code = json[i].code;
                                id = json[i].id;

                                data[i] = {};

//                                data[id]['id'] = id;
                                data[i]['title'] = title;
                                data[i]['code'] = code;
                                data[i]['id'] = id;
                            }

//                            console.log(data);
//                            var response = JSON.stringify(data);

                            if(!$.isEmptyObject(data)){

//                                console.log(response);

                                var highlight = function(string, $el) {
                                    var img = $el.find('img');
                                    var matchStart = $el.text().toLowerCase().indexOf("" + string.toLowerCase() + ""),
                                        matchEnd = matchStart + string.length - 1,
                                        beforeMatch = $el.text().slice(0, matchStart),
                                        matchText = $el.text().slice(matchStart, matchEnd + 1),
                                        afterMatch = $el.text().slice(matchEnd + 1);
                                    $el.html("<a href="+link+id+"><span>" + beforeMatch + "<span class='highlight'>" + matchText + "</span>" + afterMatch + "</span></a>");
                                    if (img.length) {
                                        $el.prepend(img);
                                    }
                                };

                                var val = inputVal.toLowerCase();
                                $autocomplete.empty();

                                if (val !== '') {

                                    for (var i = 0; i < data.length; i++) {

                                            var id = data[i].id;
                                            var key = data[i].title;
                                            var code = data[i].code;

//                                            val = val.replace(/ \//g,"\n");
//                                            key = key.replace(/ \//g,"\n");
//                                            code = code.replace(/ \//g,"\n");

                                            console.log('id= '+id+', val = '+ val+', key ='+key+', code ='+code);

                                            if (key.toLowerCase() !== val && key.toLowerCase().indexOf(val) !== -1){

                                                var autocompleteOption = $('<li></li>');
                                                autocompleteOption.append('<span>'+key+' ('+code+')</span>');
                                                $autocomplete.append(autocompleteOption);
                                                highlight(val, autocompleteOption);

                                                console.log('Résultat item ='+data[i].title)

                                         }
                                    }
                                }

                                 // Perform search
                                $inputDiv.on('keyup', function (e) {
                                    // Capture Enter

                                    if (e.which === 13) {
                                        $autocomplete.find('a').first().click();
                                        return;
                                    }

                                });

                            }

                        });
                    }

                    else{
                        $autocomplete.empty();;
                    }


                }
            }//end searchApp

        }

    )(window, jQuery);


    $(document).ready(function() {

        $("#searchItem").keyup(function() {

            searchApp.searchItem();
//            console.log('window.Response.content = '+window.Response.content);
        });

    });


    </script>

    <script>

        //materialize
//        $.fn.autocomplete = function (options) {
//            // Defaults
//            var defaults = {
//                data: {}
//            };
//
//            options = $.extend(defaults, options);
//
//            return this.each(function() {
//                var $input = $(this);
//                var data = options.data,
//                    $inputDiv = $input.closest('.input-field'); // Div to append on
//
//                // Check if data isn't empty
//                if (!$.isEmptyObject(data)) {
//                    // Create autocomplete element
//                    var $autocomplete = $('<ul class="autocomplete-content dropdown-content"></ul>');
//
//                    // Append autocomplete element
//                    if ($inputDiv.length) {
//                        $inputDiv.append($autocomplete); // Set ul in body
//                    } else {
//                        $input.after($autocomplete);
//                    }
//
//                    var highlight = function(string, $el) {
//                        var img = $el.find('img');
//                        var matchStart = $el.text().toLowerCase().indexOf("" + string.toLowerCase() + ""),
//                            matchEnd = matchStart + string.length - 1,
//                            beforeMatch = $el.text().slice(0, matchStart),
//                            matchText = $el.text().slice(matchStart, matchEnd + 1),
//                            afterMatch = $el.text().slice(matchEnd + 1);
//                        $el.html("<span>" + beforeMatch + "<span class='highlight'>" + matchText + "</span>" + afterMatch + "</span>");
//                        if (img.length) {
//                            $el.prepend(img);
//                        }
//                    };
//
//                    // Perform search
//                    $input.on('keyup', function (e) {
//                        // Capture Enter
//                        if (e.which === 13) {
//                            $autocomplete.find('li').first().click();
//                            return;
//                        }
//
//                        var val = $input.val().toLowerCase();
//                        $autocomplete.empty();
//
//                        // Check if the input isn't empty
//                        if (val !== '') {
//                            for(var key in data) {
//                                if (data.hasOwnProperty(key) &&
//                                    key.toLowerCase().indexOf(val) !== -1 &&
//                                    key.toLowerCase() !== val) {
//                                    var autocompleteOption = $('<li></li>');
//                                    if(!!data[key]) {
//                                        autocompleteOption.append('<img src="'+ data[key] +'" class="right circle"><span>'+ key +'</span>');
//                                    } else {
//                                        autocompleteOption.append('<span>'+ key +'</span>');
//                                    }
//                                    $autocomplete.append(autocompleteOption);
//
//                                    highlight(val, autocompleteOption);
//                                }
//                            }
//                        }
//                    });
//
//                    // Set input value
//                    $autocomplete.on('click', 'li', function () {
//                        $input.val($(this).text().trim());
//                        $input.trigger('change');
//                        $autocomplete.empty();
//                    });
//                }
//            });
//        };
//
//        }); // End of $(document).ready
    </script>
{% endblock %}

