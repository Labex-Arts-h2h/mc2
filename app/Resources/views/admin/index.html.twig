{% extends 'base.html.twig' %}


{% block stylesheets %}

    {{ parent() }}
    <style>

        .axis--x path {
            display: none;
        }

        .line {
            fill: none;
            stroke: steelblue;
            stroke-width: 1.5px;
        }

    </style>
{% endblock %}

{% block body %}

    <section class='container'>
        <h1>Admin Page</h1>

        {#<svg width="960" height="500"></svg>#}

        <article>
            <h2>All users</h2>
            <table class="striped">
                <tr>
                    <th>Username</th>
                    <th>email</th>
                    <th>enabled</th>
                    <th>role</th>
                    <th>last login</th>
                </tr>
                {%  for user in users %}
                <tr>
                    <td>{{ user.username }}</td>
                    <td>{{ user.email }}</td>
                    <td>{{ user.enabled }}</td>
                    <td>
                    {% for role in user.roles %}
                        {{ role }}{% if loop|last %}{% else %},{% endif %}
                    {% endfor %}
                    </td>
                    <td>
                        {{ user.lastLogin|date() }}
                    </td>
                </tr>
                {% endfor %}
            </table>
        </article>

        <article>
            <h2>Numbers by editor</h2>

            <table class="striped">
                <tr>
                    <th>Username</th>
                    <th>Count</th>
                </tr>
            {%  for number in numbersByEditor %}
                <tr>
                    <td>{{  number.name }}</td>
                    <td>{{ number.nb }}</td>
                </tr>
            {% endfor %}
            </table>
        </article>

        <article>
            <h2>Last numbers</h2>
            <table class="striped">
            {% for number in lastNumbers %}
                <tr>
                    <td>{{ number.title }}</td>
                    <td>{{ number.lastUpdate | date() }}</td>
                    {#<td>{{ number.editors.username }}</td>#}
                </tr>
            {% endfor %}
            </table>
        </article>

        <article>
            <h2>Numbers waiting for validation</h2>
            <p>[in progress]</p>
        </article>

        <article>
            <h2>Count of new numbers by day</h2>
            <table class="striped">
                <tr>
                    <td>Count</td>
                    <td>Date</td>
                </tr>
                {% for number in numberByMonth %}
                <tr>
                    <td>{{ number.nb }}</td>
                    <td>{{ number.day }} - {{ number.month }} - {{ number.year }}</td>
                </tr>
                {% endfor %}
            </table>
        </article>




    </section>

{% endblock %}

{% block javascripts %}

    <script src="https://d3js.org/d3.v4.min.js"></script>
    <script>


        var svg = d3.select("svg"),
                margin = {top: 20, right: 20, bottom: 30, left: 50},
                width = +svg.attr("width") - margin.left - margin.right,
                height = +svg.attr("height") - margin.top - margin.bottom,
                g = svg.append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");

        var parseTime = d3.timeParse("%d-%b-%y");

        var x = d3.scaleTime()
                .rangeRound([0, width]);

        var y = d3.scaleLinear()
                .rangeRound([height, 0]);

        var line = d3.line()
                .x(function(d) { return x(d.date); })
                .y(function(d) { return y(d.close); });

        d3.tsv("data/test.tsv", function(d) {
            d.date = parseTime(d.date);
            d.close = +d.close;
            return d;
        }, function(error, data) {
            if (error) throw error;

            x.domain(d3.extent(data, function(d) { return d.date; }));
            y.domain(d3.extent(data, function(d) { return d.close; }));

            g.append("g")
                    .attr("class", "axis axis--x")
                    .attr("transform", "translate(0," + height + ")")
                    .call(d3.axisBottom(x));

            g.append("g")
                    .attr("class", "axis axis--y")
                    .call(d3.axisLeft(y))
                    .append("text")
                    .attr("fill", "#000")
                    .attr("transform", "rotate(-90)")
                    .attr("y", 6)
                    .attr("dy", "0.71em")
                    .style("text-anchor", "end")
                    .text("Price ($)");

            g.append("path")
                    .datum(data)
                    .attr("class", "line")
                    .attr("d", line);
        });

    </script>


{% endblock %}