{% extends 'base.html.twig' %}

{%  block stylesheets %}
    {{ parent() }}
    <style>
        .card{
            padding : 30px;
        }

        .donut{
            height: 400px;
        }

        .list_film, .list_number {
            color: #039be5;
            cursor: pointer; cursor: hand;
        }
    </style>
{% endblock %}

{% block body %}

    <section class="container">
        <h1>Dance : {{ myDance.title }}</h1>
        <p><i>{{ myDance.definition }}</i></p>


        <article class="card row">
            <h2>Production Numbers per Year</h2>
           <div id="diagram" style="height: 300px;"></div>
        </article>

        <article class="card row">
            <h2>Dancing ensemble</h2>
            <h2><i>Formation</i></h2>

            <div class="col s7 donut" id="donut_ensemble"><svg></svg></div>

            <div class='wordcloud col s5 row' id='wordcloud_dancemble' style="height: 300px"></div>

            {#<div class="col s5">#}
                {#{% for item in dancembles  %}#}
                    {#<span class="chip">{{ item.title }} ({{ item.nb }})</span>#}
                {#{% endfor %}#}
            {#</div>#}
        </article>

        <article class="card row">

            <h2>List of numbers</h2>

            <div id="table_one_dancecontent" class="row">
                <input class="search" placeholder="Search" />
                <table class="striped medium-table">
                    <thead>
                    <tr>
                        <th onclick="sortPerso(this, 'list_number')" data-cpt="0">Number</th>
                        <th onclick="sortPerso(this, 'list_film')" data-cpt="0">Film</th>
                        <th onclick="sortPerso(this, 'list_release_date')" data-cpt="0">Release Date</th>
                        <th onclick="sortPerso(this, 'list_studio')" data-cpt="0">Studio</th>
                        <th onclick="sortPerso(this, 'list_style')" data-cpt="0">Musical Style</th>
                    </tr>
                    </thead>
                    <tbody class="list">

                    {% for number in numbers  %}

                    <tr>
                        <td onclick="window.location.href='{{ path('number', {'id' : number.id}) }}';" class="list_number">{{ number.title }}</td>
                        <td onclick="window.location.href='{{ path('film', {'filmId' : number.film.filmId}) }}';" class="list_film">{{ number.film.title }}</td>
                        <td class="list_release_date">{{ number.film.released }}</td>
                        <td class="list_studio">
                            {% for studio in number.film.studios %}
                                {{ studio.title }}{% if not loop.last %}, {% endif %}
                            {% endfor %}
                        </td>
                        <td class="list_style">
                            {% for style in number.musicalThesaurus %}
                                {{ style.title }}{% if not loop.last %}, {% endif %}
                            {% endfor %}
                        </td>

                        {% endfor %}
                    </tbody>
                </table>
                <ul class="pagination"></ul>
            </div>
        </article>

        {#<article class="card row">#}
            {#<h2>Exoticism</h2>#}

            {#<div class="col s7 donut" id="donut_exoticisms"><svg></svg></div>#}

            {#<div class="col s5">#}
                {#{% for item in exoticisms  %}#}
                    {#<span class="chip">{{ item.title }} ({{ item.nb }})</span>#}
                {#{% endfor %}#}
            {#</div>#}
        {#</article>#}


        {#<article>#}
            {#<h2>List of movies with {{ myDance.title }} dance</h2>#}

            {#<div class="liste row">#}
                {#{% for film in filmsByDance  %}#}
                    {#<div class="card horizontal col s4 ">#}
                        {#{% if film.imdb %}#}
                            {#<img src="http://img.omdbapi.com/?i={{ film.imdb }}&apikey=1733f6a&h=100" alt="poster">#}
                        {#{% endif %}#}
                        {#<a href="{{ path('film', {'filmId' : film.filmId}) }}"><h3>{{ film.title }}</h3></a>#}
                    {#</div>#}
                {#{% endfor %}#}
            {#</div>#}
        {#</article>#}

        {#<article class="card">#}

            {#<h2>List of numbers</h2>#}

            {#<table class="striped">#}
                {#<tr>#}
                    {#<th>Number</th>#}
                    {#<th>Film</th>#}
                {#</tr>#}
                {#{% for item in numbers %}#}
                    {#<tr>#}
                        {#<td>{{ item.title }}</td>#}
                        {#<td>{{ item.film }}</td>#}
                    {#</tr>#}
                {#{% endfor %}#}
            {#</table>#}

        {#</article>#}


        {#<article>#}
        {#<div id="chart_div"></div>#}

        {#</article>#}

        {#<article>#}
            {#<h2>List of numbers with {% for item in dance %}{{ item.title }}{% endfor %} dance</h2>#}

            {#<div class="liste row">#}
                {#<table class="striped">#}
                    {#<tr>#}
                        {#<th>number</th>#}
                        {#<th>Released</th>#}
                        {#<th>film</th>#}

                    {#</tr>#}
                    {#{% for number in numbers  %}#}
                        {#<tr>#}
                            {#<td><a href="{{ path('number', {'id' : number.id}) }}">{{ number.title }}</a></td>#}
                            {#<td>{{ number.released }}</td>#}
                            {#<td>{{ number.filmTitle }}</td>#}

                        {#</tr>#}
                    {#{% endfor %}#}
                {#</table>#}
            {#</div>#}
        {#</article>#}
    </section>

{% endblock %}


{% block javascripts %}

    {{ parent() }}

    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script src="{{ asset('assets/vendor/list.js/docs/assets/javascripts/list.min.js') }}"></script>

    <script type="text/javascript">
        google.charts.load('current', {packages: ['corechart', 'line']});
        google.charts.setOnLoadCallback(drawBasic);
        function drawBasic() {
            //diagram
            var data = new google.visualization.DataTable();
            data.addColumn('date', 'Year');
            data.addColumn('number', 'Numbers');

            data.addRows([
                {% for item in danceContentByYear %}
                [new Date({{ item.released }}, 0, 1), {{ item.nb }}],
                {% endfor %}
            ]);

            var formatter = new google.visualization.DateFormat({pattern: 'yyyy'});
            formatter.format(data, 0);

            var options = {

            };


            var chart = new google.visualization.LineChart(document.getElementById('diagram'));

            chart.draw(data, options);

        }
        //Donut ensemble
        nv.addGraph(function() {
            var chart = nv.models.pieChart()
                            .x(function(d) { return d.label })
                            .y(function(d) { return d.value })
                            .showLabels(true)     //Display pie labels
                            .labelThreshold(.05)  //Configure the minimum slice size for labels to show up
                            .labelType("percent") //Configure what type of data to show in the label. Can be "key", "value" or "percent"
                            .donut(true)          //Turn on Donut mode. Makes pie chart look tasty!
                            .donutRatio(0.35)     //Configure how big you want the donut hole size to be.
                    ;

            d3.select("#donut_ensemble svg")
                    .datum(exampleData3())
                    .transition().duration(350)
                    .call(chart);

            return chart;
        });

        //Pie chart example data. Note how there is only a single array of key-value pairs.
        function exampleData3() {
            return  [
                {% for item in dancembles %}
                {
                    "label" : "{{ item.title }}",
                    "value" : {{ item.nb }} },
                {% endfor %}
            ];
        }

        //Donut exoticisms
        nv.addGraph(function() {
            var chart = nv.models.pieChart()
                            .x(function(d) { return d.label })
                            .y(function(d) { return d.value })
                            .showLabels(true)     //Display pie labels
                            .labelThreshold(.05)  //Configure the minimum slice size for labels to show up
                            .labelType("percent") //Configure what type of data to show in the label. Can be "key", "value" or "percent"
                            .donut(true)          //Turn on Donut mode. Makes pie chart look tasty!
                            .donutRatio(0.35)     //Configure how big you want the donut hole size to be.
                    ;

            d3.select("#donut_exoticisms svg")
                    .datum(exampleData5())
                    .transition().duration(350)
                    .call(chart);

            return chart;
        });

        //Pie chart example data. Note how there is only a single array of key-value pairs.
        function exampleData5() {
            return  [
                {% for item in exoticisms %}
                {
                    "label" : "{{ item.title }}",
                    "value" : {{ item.nb }} },
                {% endfor %}
            ];
        }
    </script>

    <script>

        {% if numbers|length < 16 %}

        var options = {
            valueNames: ['list_number', 'list_film', 'list_release_date', 'list_studio', 'list_style']
        };

        {% endif %}


        {% if numbers|length > 15 %}

        var options = {
            valueNames: ['list_number', 'list_film', 'list_release_date', 'list_studio', 'list_style'],
            page: 15,
            pagination: true
        };

        {% endif %}

        var numberList = new List('table_one_dancecontent', options);

    </script>

    <script>

        words_dancemble = [{% for item in dancembles  %}{ text : "{{ item.title }}", weight : {{ item.nb }}  } {% if loop.last %}{% else %},{% endif %}{% endfor %}];
        $('#wordcloud_dancemble').jQCloud(words_dancemble);
        $('#wordcloud_dancemble').jQCloud('update', words_dancemble, {
            fontSize: {
                colors: ["#800026", "#bd0026", "#e31a1c", "#fc4e2a", "#fd8d3c", "#feb24c", "#fed976", "#ffeda0", "#ffffcc"],
                from: 0.1,
                to: 0.05
            }
        });

    </script>

    <script>
        function sortPerso(element, col) {

            if (element.dataset.cpt%2 == 0) {
                numberList.sort(col, {order : "asc"});
                element.dataset.cpt++;
            } else {
                numberList.sort(col, {order : "desc"});
                element.dataset.cpt++;
            }
        }
    </script>

{% endblock %}