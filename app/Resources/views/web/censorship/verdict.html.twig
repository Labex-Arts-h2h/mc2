{% extends "base.html.twig" %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        #chart_div{
            height: 400px;
        }

        .film{
            margin-bottom: 1em;
            height:350px;
        }

        .poster{
            height:300px;
        }

        tr{
            line-height: 0.2em;
        }
        .donut{
            height:450px;
        }
        .card{
            padding : 30px;
        }
    </style>
{% endblock %}

{% block body %}
    <section class="container">

        <h1>PCA verdict {% for item in verdict  %}{{ item.title }}{% endfor %}</h1>

        <article class="card">
            <p><span class="number">{{ filmsByVerdict|length }}</span> films / <span class="number">{{ nbFilmsWithVerdict.nb }}</span> studied films.</p>
        </article>

        <article class="card row">
            <h2>Studios</h2>

            <div class="col s6">
                <h2>Films by studios for verdict "{% for item in verdict  %}{{ item.title }}{% endfor %}"</h2>
                <div id="donut_verdict" class="donut"><svg></svg></div>
            </div>

            <div class="col s6">
                <h2>Films by studios for all verdicts</h2>
                <div id="donut_all_verdicts" class="donut"><svg></svg></div>
            </div>

        </article>

        <article class="card">
            <h2>List of films with "{% for item in verdict  %}{{ item.title }}{% endfor %}" verdict</h2>

            <div id="table_one_verdict" class="row">
                <input class="search" placeholder="Search" />
                <table class="striped medium-table tablesorter">
                    <thead>
                    <tr>
                        <th>Film</th>
                        <th>Release Date</th>
                        <th>Studio</th>
                    </tr>
                    </thead>
                    <tbody class="list">
                    {% for film in filmsByVerdict  %}
                        <tr>
                            <td class="list_film"><a href="{{ path('film', {'filmId' : film.filmId}) }}">{{ film.title }}</a></td>
                            <td class="list_release_date">{{ film.released }}</td>
                            <td class="list_studio">
                                {% for studio in film.studios %}
                                    {{ studio.title }}{% if not loop.last %}, {% endif %}
                                {% endfor %}
                            </td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
                <ul class="pagination"></ul>
            </div>

            {#<div class="row">#}
            {#{% for film in filmsByVerdict  %}#}
                {#<a href="{{ path('film', {'filmId' : film.filmId}) }}">#}
                    {#<div class="col s3 film">#}
                        {#<h4 class="center">{{ film.title }} ({{ film.released }})</h4>#}
                        {#<img class="poster" src="http://img.omdbapi.com/?i={{ film.idImdb }}&apikey=1733f6a&h=300" alt="poster">#}
                    {#</div>#}
                {#</a>#}
            {#{% endfor %}#}
            {#</div>#}
        </article>


    </section>
{% endblock %}


{% block javascripts %}

    {{ parent() }}
    <script src="{{ asset('assets/vendor/list.js/docs/assets/javascripts/list.min.js') }}"></script>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">

        //Donut ratio studio for 1 verdict
        nv.addGraph(function() {
            var chart = nv.models.pieChart()
                            .x(function(d) { return d.label })
                            .y(function(d) { return d.value })
                            .showLabels(true)     //Display pie labels
                            .labelThreshold(.05)  //Configure the minimum slice size for labels to show up
                            .labelType("percent") //Configure what type of data to show in the label. Can be "key", "value" or "percent"
                            .donut(true)          //Turn on Donut mode. Makes pie chart look tasty!
                            .donutRatio(0.35)     //Configure how big you want the donut hole size to be.
                    ;

            d3.select("#donut_verdict svg")
                    .datum(exampleData())
                    .transition().duration(350)
                    .call(chart);

            return chart;
        });

        //Pie chart example data. Note how there is only a single array of key-value pairs.
        function exampleData() {
            return  [

                {% for studio in studiosByVerdict %}
                {
                    "label": "{{ studio.title }}",
                    "value": {{ studio.nb }}
                },
                {% endfor %}
            ];
        }

        //Donut ratio studio for all studied films
        nv.addGraph(function() {
            var chart = nv.models.pieChart()
                            .x(function(d) { return d.label })
                            .y(function(d) { return d.value })
                            .showLabels(true)     //Display pie labels
                            .labelThreshold(.05)  //Configure the minimum slice size for labels to show up
                            .labelType("percent") //Configure what type of data to show in the label. Can be "key", "value" or "percent"
                            .donut(true)          //Turn on Donut mode. Makes pie chart look tasty!
                            .donutRatio(0.35)     //Configure how big you want the donut hole size to be.
                    ;

            d3.select("#donut_all_verdicts svg")
                    .datum(exampleData2())
                    .transition().duration(350)
                    .call(chart);

            return chart;
        });
        //Pie chart example data. Note how there is only a single array of key-value pairs.
        function exampleData2() {
            return  [

                {% for studio in nbFilmsWithVerdictByStudio %}
                {
                    "label": "{{ studio.title }}",
                    "value": {{ studio.nb }}
                },
                {% endfor %}
            ];
        }

        {#google.charts.load('current', {packages: ['corechart', 'line']});#}
        {#google.charts.setOnLoadCallback(drawBasic);#}
        {#function drawBasic() {#}
            {#//diagram#}
            {#var data = new google.visualization.DataTable();#}
            {#data.addColumn('number', 'Year');#}
            {#data.addColumn('number', 'Occurence');#}

            {#data.addRows([#}
                {#{% for studio in nbFilmsWithVerdictByStudio %}#}
                {#[ {{ studio.title }} , {{ studio.nb }} ],#}
                {#{% endfor %}#}
            {#]);#}

            {#var options = {#}
                {#hAxis: {#}
                    {#title: 'Years'#}
                {#},#}
                {#vAxis: {#}
                    {#title: 'Occurences'#}
                {#},#}
            {#};#}


            {#var chart = new google.visualization.LineChart(document.getElementById('diagram'));#}

            {#chart.draw(data, options);#}

        {#}#}
    </script>


    <script>

        {% if filmsByVerdict|length < 16 %}

        var options = {
            valueNames: ['list_film', 'list_release_date', 'list_studio']
        };

        {% endif %}


        {% if filmsByVerdict|length > 15 %}

        var options = {
            valueNames: ['list_film', 'list_release_date', 'list_studio'],
            page: 15,
            pagination: true
        };

        {% endif %}

        var FilmList = new List('table_one_verdict', options);

    </script>

{% endblock %}