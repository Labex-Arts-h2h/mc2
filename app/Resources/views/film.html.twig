{% extends 'base.html.twig' %}

{% block fos_user_content %}{% endblock %}
{% block stylesheets %}

{{parent()}}

<link href="{{asset('assets/vendor/vis/dist/vis.css')}}" rel="stylesheet" type="text/css" />

{% endblock %}


{% block body %}

<section class='container' id='film'>

    <div class="row">

         <h1>{{film.title}}</h1>
         <hr>
    </div>

    <div class="row">

        <article class='col s12 m6'>
          <h2>List of numbers</h2>
           {% for number in numbersOf1Film %}
              <p>
                {{loop.index}} | {{number.title}} ({{number.beginTc}}) <!-- structure-->
                <!-- tout le monde a accès au film mais seuls les éditeurs peuvent le modifier -->
                {% if is_granted("IS_AUTHENTICATED_REMEMBERED") %}
                    <a href="{{path('number_edit', { numberId : number.id })}}">edit</a>
                    |
                    <a href="{{path('number_edit', { numberId : number.id })}}">view</a> <!-- ajouter une view des numbers -->
                {% endif %}
              </p>
          {% endfor %}

        {% if is_granted("IS_AUTHENTICATED_REMEMBERED") %} <!-- combiner les deux fonctionnalités admin dans un même champ ? -->
          <a href="{{path('number_new', {filmId : film.filmId }) }}"><button class="btn teal">Add a number</button></a>
          <a href="#"><button class="btn red">Complete</button></a> <!-- définir une fonction pour bloquer les numbers -->
         {% endif %}
        </article>

        <article class='col s12 m6'>
            <h2>Vue synthétique</h2>

            <p>todo : Faire fusionner avec la partie gauche</p>
            <table class="table striped">
                <tr>
                    <th>title</th>
                    <th>Structure</th>
                    <th>Performers</th>
                    <th>Dance</th>
                    <th>Musical Style</th>
                </tr>
                <tr>
                    <td>Le principe</td>
                    <td>Le principe</td>
                    <td>Le principe</td>
                    <td>Le principe</td>
                    <td>Le principe</td>
                </tr>
                <tr>
                    <td>Le principe</td>
                    <td>Le principe</td>
                    <td>Le principe</td>
                    <td>Le principe</td>
                    <td>Le principe</td>
                </tr>
            </table>

        </article>

    </div>


    <div class="row">

        <article class='s12 m6'>

          <h2>Lengths</h2>

          <article class="card red accent-2 col s12 m6">
            <div class="card-content white-text center-align">
                <p class="center-align number">{{film.length}} sec</p>
                <p class="center-align number-label">Movie Length</p>
            </div>
          </article>

          <article class="card light-green col s12 m6">
            <div class="card-content white-text center-align">
                <p class="center-align number">{{((film.length)/60)|round}} min</p>
                <p class="center-align number-label">Movie Length</p>
            </div>
          </article>

          <article class="card cyan s12 m6">
            <div class="card-content white-text center-align">
                <p class="center-align number">   {% for number in numberSumLength %}
              {% if number.total > 0 %}
              {{(number.total/60)|round}} min
              {% else %}
              <p>N/A</p>
              {% endif %}

            {% endfor %}</p>
                <p class="center-align number-label">Sum of all numbers</p>
            </div>
          </article>
    </div>

  <article class="card amber col s12 m6">
    <div class="card-content white-text center-align">
        <p class="center-align number">{% for number in numberSumLength %}

      {% if number.total > 0 %}
      {{((number.total/number.length)*100)|round(2, 'floor') }}%
      {% else %}
      <p>N/A</p>
      {% endif %}

    {% endfor %}</p>
        <p class="center-align number-label">Ratio number/total length</p>
    </div>
  </article>

  <article class="card  deep-orange col s12 m6">
    <div class="card-content white-text center-align">
        <p class="center-align number">{% for number in numberAverageLength %}{{number.average|round}} sec{% endfor %}</p>
        <p class="center-align number-label">Average number length for {{film.title}}</p>
    </div>
  </article>

  <article class="card pink lighten-2 col s12 m6">
    <div class="card-content white-text center-align">
        <p class="center-align number">{% for number in numbersAverageLength %}{{number.average|round}} sec{% endfor %}</p>
        <p class="center-align number-label">Average number length for all the movies</p>
    </div>
  </article>
</article>

<article>
  <h3>Number's distribution</h3>

  <div id="donut">
    <svg style="height:500px;"></svg>
  </div>
</article>

<article>
  <h3>Pictures of numbers</h3>
  <p>Soon...</p>
</article>

<article>
  <h3>Persons linked</h3>
  {% for person in persons1Film %}
    {{person.personId}}
  {% endfor %}

</article>

<article>
  <h3>Graphe/ Timeline</h3>
  <div id="visualization"></div>
</article>

</div>

</section>

{% endblock %}
  
{% block javascripts %} 

  {{parent()}}


  <!-- Timeline -->
  <script type="text/javascript">
  // DOM element where the Timeline will be attached
  var container = document.getElementById('visualization');


  //title, begin-tc, ending-tc
  var items = new vis.DataSet([
    {% for number in numbersOf1Film %}
    {id: {{loop.index}}, content: '{{number.title}}', start: {{number.beginTc}}, end: {{number.endTc}}},
    {% endfor %}
  ]);

  // Configuration for the Timeline
  var options = {};

  // Create a Timeline
  var timeline = new vis.Timeline(container, items, options);

  nv.addGraph(function() {
        var chart = nv.models.pieChart()
            .x(function(d) { return d.label })
            .y(function(d) { return d.value })
            .showLabels(true)     //Display pie labels
            .labelThreshold(.05)  //Configure the minimum slice size for labels to show up
            .labelType("percent") //Configure what type of data to show in the label. Can be "key", "value" or "percent"
            .donut(true)          //Turn on Donut mode. Makes pie chart look tasty!
            .donutRatio(0.35)     //Configure how big you want the donut hole size to be.
            ;
          d3.select("#donut svg")
              .datum(numberLengthData ())
              .transition().duration(350)
              .call(chart);

        return chart;
      });

  function numberLengthData() {
  return  [
      {% for number in numbersOf1Film %}
          {"label" : "{{number.title}}",
          "value" : "{{number.length}}"},
      {% endfor %}
    ];

  //Timeline 2

  // nv.addGraph(function() {  
  //   var chart = nv.models.bulletChart();

  //   d3.select('#chart svg')
  //       .datum(exampleData())
  //       .transition().duration(1000)
  //       .call(chart);

  //   return chart;
  // });


  // function exampleData() {
  //   return {
  //     "title":"Revenue",    //Label the bullet chart
  //     "subtitle":"US$, in thousands",   //sub-label for bullet chart
  //     "ranges":[150,225,300],  //Minimum, mean and maximum values.
  //     "measures":[220],    //Value representing current measurement (the thick blue line in the example)
  //     "markers":[250]      //Place a marker on the chart (the white triangle marker)
  //   };
  // }

}

</script>

{% endblock %}